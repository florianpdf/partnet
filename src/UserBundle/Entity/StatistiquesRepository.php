<?php

namespace UserBundle\Entity;
use Symfony\Component\Validator\Constraints\DateTime;

/**
 * StatistiquesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StatistiquesRepository extends \Doctrine\ORM\EntityRepository
{
    public function getStatistiquesParMois($year)
    {
        $queryBuilder = $this->_em->createQueryBuilder()
            ->select('SUBSTRING(s.date, 1, 7) as month, COUNT(s) as visites, o.nom')
            ->from($this->_entityName, 's')// Dans un repository, $this->_entityName est le namespace de l'entité gérée
            ->leftJoin('s.user', 'u')
            ->leftJoin('u.id_organisme', 'o')
            ->where('SUBSTRING(s.date, 1, 4) = :year')
            ->groupBy('month')
            ->setParameter('year', $year);
        $result = $queryBuilder->getQuery()->getResult();
        return $result;
    }

    public function getStatistiquesParMoisAccueil($year)
    {
        $queryBuilder = $this->_em->createQueryBuilder()
            ->select('SUBSTRING(s.date, 1, 7) as month, SUM(s.nbVisitesAccueil) as visites, o.nom')
            ->from($this->_entityName, 's')// Dans un repository, $this->_entityName est le namespace de l'entité gérée
            ->leftJoin('s.user', 'u')
            ->leftJoin('u.id_organisme', 'o')
            ->where('SUBSTRING(s.date, 1, 4) = :year')
            ->groupBy('month')
            ->setParameter('year', $year);
        $result = $queryBuilder->getQuery()->getResult();
        return $result;
    }

    public function getStatistiquesParMoisGed($year)
    {
        $queryBuilder = $this->_em->createQueryBuilder()
            ->select('SUBSTRING(s.date, 1, 7) as month, SUM(s.nbVisitesGed) as visites, o.nom')
            ->from($this->_entityName, 's')// Dans un repository, $this->_entityName est le namespace de l'entité gérée
            ->leftJoin('s.user', 'u')
            ->leftJoin('u.id_organisme', 'o')
            ->where('SUBSTRING(s.date, 1, 4) = :year')
            ->groupBy('month')
            ->setParameter('year', $year);
        $result = $queryBuilder->getQuery()->getResult();
        return $result;
    }

    public function getStatistiquesParMoisFormation($year)
    {
        $queryBuilder = $this->_em->createQueryBuilder()
            ->select('SUBSTRING(s.date, 1, 7) as month, SUM(s.nbVisitesFormation) as visites, o.nom')
            ->from($this->_entityName, 's')// Dans un repository, $this->_entityName est le namespace de l'entité gérée
            ->leftJoin('s.user', 'u')
            ->leftJoin('u.id_organisme', 'o')
            ->where('SUBSTRING(s.date, 1, 4) = :year')
            ->groupBy('month')
            ->setParameter('year', $year);
        $result = $queryBuilder->getQuery()->getResult();
        return $result;
    }

    public function getStatistiquesParMoisEmploi($year)
    {
        $queryBuilder = $this->_em->createQueryBuilder()
            ->select('SUBSTRING(s.date, 1, 7) as month, SUM(s.nbVisitesEmploi) as visites, o.nom')
            ->from($this->_entityName, 's')// Dans un repository, $this->_entityName est le namespace de l'entité gérée
            ->leftJoin('s.user', 'u')
            ->leftJoin('u.id_organisme', 'o')
            ->where('SUBSTRING(s.date, 1, 4) = :year')
            ->groupBy('month')
            ->setParameter('year', $year);
        $result = $queryBuilder->getQuery()->getResult();
        return $result;
    }

    public function getStatistiquesParMoisAnnuaire($year)
    {
        $queryBuilder = $this->_em->createQueryBuilder()
            ->select('SUBSTRING(s.date, 1, 7) as month, SUM(s.nbVisitesAnnuaire) as visites, o.nom')
            ->from($this->_entityName, 's')// Dans un repository, $this->_entityName est le namespace de l'entité gérée
            ->leftJoin('s.user', 'u')
            ->leftJoin('u.id_organisme', 'o')
            ->where('SUBSTRING(s.date, 1, 4) = :year')
            ->groupBy('month')
            ->setParameter('year', $year);
        $result = $queryBuilder->getQuery()->getResult();
        return $result;
    }

    public function getStatistiquesParMoisDialogue($year)
    {
        $queryBuilder = $this->_em->createQueryBuilder()
            ->select('SUBSTRING(s.date, 1, 7) as month, SUM(s.nbVisitesDialogue) as visites, o.nom')
            ->from($this->_entityName, 's')// Dans un repository, $this->_entityName est le namespace de l'entité gérée
            ->leftJoin('s.user', 'u')
            ->leftJoin('u.id_organisme', 'o')
            ->where('SUBSTRING(s.date, 1, 4) = :year')
            ->groupBy('month')
            ->setParameter('year', $year);
        $result = $queryBuilder->getQuery()->getResult();
        return $result;
    }


    public function getStatistiquesParMoisAgenda($year)
    {
        $queryBuilder = $this->_em->createQueryBuilder()
            ->select('SUBSTRING(s.date, 1, 7) as month, SUM(s.nbVisitesAgenda) as visites, o.nom')
            ->from($this->_entityName, 's')// Dans un repository, $this->_entityName est le namespace de l'entité gérée
            ->leftJoin('s.user', 'u')
            ->leftJoin('u.id_organisme', 'o')
            ->where('SUBSTRING(s.date, 1, 4) = :year')
            ->groupBy('month')
            ->setParameter('year', $year);
        $result = $queryBuilder->getQuery()->getResult();
        return $result;
    }

}